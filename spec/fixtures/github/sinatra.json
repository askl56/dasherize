[
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1035",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1035/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1035/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1035/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1035",
    "id": 106346762,
    "number": 1035,
    "title": "Cannot keep stream open with puma server",
    "user": {
      "login": "b-dean",
      "id": 3189231,
      "avatar_url": "https://avatars.githubusercontent.com/u/3189231?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b-dean",
      "html_url": "https://github.com/b-dean",
      "followers_url": "https://api.github.com/users/b-dean/followers",
      "following_url": "https://api.github.com/users/b-dean/following{/other_user}",
      "gists_url": "https://api.github.com/users/b-dean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b-dean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b-dean/subscriptions",
      "organizations_url": "https://api.github.com/users/b-dean/orgs",
      "repos_url": "https://api.github.com/users/b-dean/repos",
      "events_url": "https://api.github.com/users/b-dean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b-dean/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-09-14T13:58:52Z",
    "updated_at": "2015-09-18T17:10:49Z",
    "closed_at": null,
    "body": "I cannot get a stream to stay open (which is necessary for Server-Sent Events to work) with Sinatra running on Puma. I don't really have any idea why, but the connections close right away.\r\n\r\n```ruby\r\nrequire 'sinatra'\r\n\r\nset :server, :puma\r\nset :connections, []\r\n\r\nget '/stream', provides: 'text/event-stream' do\r\n  stream :keep_open do |out|\r\n    settings.connections << out\r\n    out.callback do\r\n      puts 'stream closed'\r\n      settings.connections.delete(out)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThen I run `curl http://localhost:4567/stream` and the output is\r\n\r\n```\r\n$ ruby example.rb \r\nPuma 2.13.4 starting...\r\n* Min threads: 0, max threads: 16\r\n* Environment: development\r\n* Listening on tcp://localhost:4567\r\n== Sinatra (v1.4.6) has taken the stage on 4567 for development with backup from Puma\r\nstream closed\r\n127.0.0.1 - - [14/Sep/2015 09:45:33] \"GET /stream HTTP/1.1\" 200 - 0.0047\r\n```\r\n\r\nIf I have the server as `:thin`, it works fine. I don't want to use Thin though, for other reasons. And if I understand puma/puma#3 correctly, Puma can do this kind of streaming just fine.\r\n\r\nThis could be related to the problems on #962, but I'm using MRI (tested on 2.1.5p273) so it might be unrelated to any problems JRuby has.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1033",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1033/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1033/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1033/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1033",
    "id": 105949398,
    "number": 1033,
    "title": "Sinatra 2.0.0 alpha [redux]",
    "user": {
      "login": "TrevorBramble",
      "id": 92880,
      "avatar_url": "https://avatars.githubusercontent.com/u/92880?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TrevorBramble",
      "html_url": "https://github.com/TrevorBramble",
      "followers_url": "https://api.github.com/users/TrevorBramble/followers",
      "following_url": "https://api.github.com/users/TrevorBramble/following{/other_user}",
      "gists_url": "https://api.github.com/users/TrevorBramble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TrevorBramble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TrevorBramble/subscriptions",
      "organizations_url": "https://api.github.com/users/TrevorBramble/orgs",
      "repos_url": "https://api.github.com/users/TrevorBramble/repos",
      "events_url": "https://api.github.com/users/TrevorBramble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TrevorBramble/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-11T05:50:11Z",
    "updated_at": "2015-09-11T21:42:08Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1033",
      "html_url": "https://github.com/sinatra/sinatra/pull/1033",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1033.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1033.patch"
    },
    "body": "(Reopening #1029 as a branch on core project to allow collaborator activity)\r\n\r\nHere we go!\r\n\r\nThe Plan:\r\n - Drop support for Rubies earlier than 2.2 (MRI and equivalent implementations)\r\n - Change nothing else\r\n - Move 1.4 development to the `1.4.x` branch, where releases will come from until 2.0 is fully released\r\n\r\nTasks:\r\n - [X] Revise Travis matrix\r\n - [X] Update gem version\r\n - [X] Add Ruby version dependency to gemspec\r\n - [ ] Raise Rack version requirement to `~> 2.0`, fix new incompatibilities\r\n - [ ] Remove overt conditional statements for dropped Rubies\r\n - [ ] Update English README to communicate new set of supported versions related notes\r\n - [ ] Coordinate translations for non-English READMEs\r\n - [ ] Sweep outstanding issues for 1.4.x changes before shunting to maintenance branch\r\n - [ ] ...figure out what else should be done...\r\n"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1032",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1032/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1032/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1032/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1032",
    "id": 105888302,
    "number": 1032,
    "title": "Route — Get Matching Route from Request?",
    "user": {
      "login": "abhillman",
      "id": 1097794,
      "avatar_url": "https://avatars.githubusercontent.com/u/1097794?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhillman",
      "html_url": "https://github.com/abhillman",
      "followers_url": "https://api.github.com/users/abhillman/followers",
      "following_url": "https://api.github.com/users/abhillman/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhillman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhillman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhillman/subscriptions",
      "organizations_url": "https://api.github.com/users/abhillman/orgs",
      "repos_url": "https://api.github.com/users/abhillman/repos",
      "events_url": "https://api.github.com/users/abhillman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhillman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-09-10T20:08:32Z",
    "updated_at": "2015-09-12T06:02:23Z",
    "closed_at": null,
    "body": "Thank you kindly for a great project!\r\n\r\nSuppose I define a route like:\r\n\r\n```\r\nget '/api/names/:first_name/:last_name' do |first_name, last_name|\r\n    \"Hello, #{first_name}!\"\r\nend\r\n```\r\n\r\nSupposing I make a request to this route — I can inspect `request.path_info` and will get something like `/api/names/john/smith`. Is there some way to inspect the request and read off the route as it was defined — i.e. get back `/api/names/:first_name/:last_name`. Are these information lost by the time a controller is called?\r\n\r\nThank you!"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1028",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1028/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1028/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1028/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1028",
    "id": 103305400,
    "number": 1028,
    "title": "Cedar10 EOL for recipes, and book apps",
    "user": {
      "login": "zzak",
      "id": 277819,
      "avatar_url": "https://avatars.githubusercontent.com/u/277819?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzak",
      "html_url": "https://github.com/zzak",
      "followers_url": "https://api.github.com/users/zzak/followers",
      "following_url": "https://api.github.com/users/zzak/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzak/subscriptions",
      "organizations_url": "https://api.github.com/users/zzak/orgs",
      "repos_url": "https://api.github.com/users/zzak/repos",
      "events_url": "https://api.github.com/users/zzak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-26T15:59:10Z",
    "updated_at": "2015-08-26T15:59:10Z",
    "closed_at": null,
    "body": "```\r\nHeroku is ending security support for Cedar-10 because the Ubuntu operating system that the stack is based on is no longer maintained by Canonical. We take security very seriously, and we know you do too, so we want to help you migrate to a stack that is more secure.\r\n \r\nThe following apps which have received traffic recently, that you own or are collaborated on, currently run on Cedar-10:\r\n \r\nsinatra-recipes, sinatra-org-book\r\n \r\nTo migrate an app, run the following commands:\r\n \r\n$ heroku stack:set cedar-14\r\n$ git commit --allow-empty -m \"Upgrading to Cedar-14\"\r\n$ git push heroku master\r\n \r\nFor details, see the Cedar-14 migration guide on Dev Center.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1026",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1026/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1026/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1026/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1026",
    "id": 102018478,
    "number": 1026,
    "title": "Don't assume a route's captures will always be Strings.",
    "user": {
      "login": "sporkmonger",
      "id": 1778,
      "avatar_url": "https://avatars.githubusercontent.com/u/1778?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sporkmonger",
      "html_url": "https://github.com/sporkmonger",
      "followers_url": "https://api.github.com/users/sporkmonger/followers",
      "following_url": "https://api.github.com/users/sporkmonger/following{/other_user}",
      "gists_url": "https://api.github.com/users/sporkmonger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sporkmonger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sporkmonger/subscriptions",
      "organizations_url": "https://api.github.com/users/sporkmonger/orgs",
      "repos_url": "https://api.github.com/users/sporkmonger/repos",
      "events_url": "https://api.github.com/users/sporkmonger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sporkmonger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2015-08-19T22:58:34Z",
    "updated_at": "2015-09-21T02:56:05Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1026",
      "html_url": "https://github.com/sinatra/sinatra/pull/1026",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1026.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1026.patch"
    },
    "body": "This is required to allow Addressable's URI templates to function with Sinatra's routing system.\r\n\r\n    require 'addressable/template'\r\n\r\n    def uri_template(pattern)\r\n      @addressable_templates ||= {}\r\n      @addressable_templates[pattern] ||= Addressable::Template.new(pattern)\r\n    end\r\n\r\n    get uri_template('/prefix{/segments*}') do\r\n      params[:segments].inspect\r\n    end\r\n"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1025",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1025/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1025/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1025/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1025",
    "id": 100712037,
    "number": 1025,
    "title": "Update README to flag issue with optional routes.",
    "user": {
      "login": "JonRowe",
      "id": 162976,
      "avatar_url": "https://avatars.githubusercontent.com/u/162976?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonRowe",
      "html_url": "https://github.com/JonRowe",
      "followers_url": "https://api.github.com/users/JonRowe/followers",
      "following_url": "https://api.github.com/users/JonRowe/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonRowe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonRowe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonRowe/subscriptions",
      "organizations_url": "https://api.github.com/users/JonRowe/orgs",
      "repos_url": "https://api.github.com/users/JonRowe/repos",
      "events_url": "https://api.github.com/users/JonRowe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonRowe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2015-08-13T08:12:45Z",
    "updated_at": "2015-09-22T11:41:37Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1025",
      "html_url": "https://github.com/sinatra/sinatra/pull/1025",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1025.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1025.patch"
    },
    "body": "The original example would also match `GET /posts_anything` as `GET /posts` with a format of `\"_anything\"` because of the optional format separator, forcing the separator is kind of an ugly example so switch to using a trailing slash which should be recognised either way (I think). It'd be nice to be able to create optional groups e.g. `(.:format)?`"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1024",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1024/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1024/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1024/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1024",
    "id": 100464252,
    "number": 1024,
    "title": "Remove reductant code",
    "user": {
      "login": "ganmacs",
      "id": 5616899,
      "avatar_url": "https://avatars.githubusercontent.com/u/5616899?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganmacs",
      "html_url": "https://github.com/ganmacs",
      "followers_url": "https://api.github.com/users/ganmacs/followers",
      "following_url": "https://api.github.com/users/ganmacs/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganmacs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganmacs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganmacs/subscriptions",
      "organizations_url": "https://api.github.com/users/ganmacs/orgs",
      "repos_url": "https://api.github.com/users/ganmacs/repos",
      "events_url": "https://api.github.com/users/ganmacs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganmacs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2015-08-12T04:45:28Z",
    "updated_at": "2015-08-16T00:52:21Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1024",
      "html_url": "https://github.com/sinatra/sinatra/pull/1024",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1024.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1024.patch"
    },
    "body": "local variable `locals` has `{}` as defalut value, So `||` operator would never enter\r\nlast condition."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1021",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1021/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1021/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1021/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1021",
    "id": 98705856,
    "number": 1021,
    "title": "Fix duplicate caching of some templates",
    "user": {
      "login": "raxoft",
      "id": 3293702,
      "avatar_url": "https://avatars.githubusercontent.com/u/3293702?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raxoft",
      "html_url": "https://github.com/raxoft",
      "followers_url": "https://api.github.com/users/raxoft/followers",
      "following_url": "https://api.github.com/users/raxoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/raxoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raxoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raxoft/subscriptions",
      "organizations_url": "https://api.github.com/users/raxoft/orgs",
      "repos_url": "https://api.github.com/users/raxoft/repos",
      "events_url": "https://api.github.com/users/raxoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raxoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-03T09:32:40Z",
    "updated_at": "2015-08-03T09:32:40Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1021",
      "html_url": "https://github.com/sinatra/sinatra/pull/1021",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1021.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1021.patch"
    },
    "body": "The change above makes sure that the `default_content_type` option is always deleted from the options.\r\n\r\nThis in turn makes sure that identical template is cached only once, regardless of whether the explicit `content_type` option is specified or not.\r\n\r\nNot to mention it also makes sure that the `default_content_type` option is not passed as an engine option to the engine which might complain about it."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1020",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1020/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1020/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1020/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1020",
    "id": 97539070,
    "number": 1020,
    "title": "Preloader for Sinatra",
    "user": {
      "login": "GCorbel",
      "id": 1296201,
      "avatar_url": "https://avatars.githubusercontent.com/u/1296201?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GCorbel",
      "html_url": "https://github.com/GCorbel",
      "followers_url": "https://api.github.com/users/GCorbel/followers",
      "following_url": "https://api.github.com/users/GCorbel/following{/other_user}",
      "gists_url": "https://api.github.com/users/GCorbel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GCorbel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GCorbel/subscriptions",
      "organizations_url": "https://api.github.com/users/GCorbel/orgs",
      "repos_url": "https://api.github.com/users/GCorbel/repos",
      "events_url": "https://api.github.com/users/GCorbel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GCorbel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-07-27T19:35:02Z",
    "updated_at": "2015-09-20T08:41:05Z",
    "closed_at": null,
    "body": "Hello,\r\n\r\nI like spring in Rails. It would be nice to have the equivalent in Sinatra. I tried to use spring but it seems to be designed for Rails. I also tried Zeus but it's the same issue.\r\n\r\nIs there a solution?\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1019",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1019/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1019/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1019/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1019",
    "id": 96204825,
    "number": 1019,
    "title": "Fix content length calculation for non string body",
    "user": {
      "login": "dimasusername",
      "id": 7683329,
      "avatar_url": "https://avatars.githubusercontent.com/u/7683329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimasusername",
      "html_url": "https://github.com/dimasusername",
      "followers_url": "https://api.github.com/users/dimasusername/followers",
      "following_url": "https://api.github.com/users/dimasusername/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimasusername/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimasusername/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimasusername/subscriptions",
      "organizations_url": "https://api.github.com/users/dimasusername/orgs",
      "repos_url": "https://api.github.com/users/dimasusername/repos",
      "events_url": "https://api.github.com/users/dimasusername/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimasusername/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-07-21T01:27:57Z",
    "updated_at": "2015-09-16T22:21:13Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1019",
      "html_url": "https://github.com/sinatra/sinatra/pull/1019",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1019.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1019.patch"
    },
    "body": "When returning an object in body that is not a string, `bytesize` method\r\nwill be called to calculte content length and will fail and return a\r\n500 without this."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1015",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1015/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1015/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1015/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1015",
    "id": 90809079,
    "number": 1015,
    "title": "How to serve static content under a folder without filename specified like an index.html or default.html?",
    "user": {
      "login": "daluu",
      "id": 637306,
      "avatar_url": "https://avatars.githubusercontent.com/u/637306?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daluu",
      "html_url": "https://github.com/daluu",
      "followers_url": "https://api.github.com/users/daluu/followers",
      "following_url": "https://api.github.com/users/daluu/following{/other_user}",
      "gists_url": "https://api.github.com/users/daluu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daluu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daluu/subscriptions",
      "organizations_url": "https://api.github.com/users/daluu/orgs",
      "repos_url": "https://api.github.com/users/daluu/repos",
      "events_url": "https://api.github.com/users/daluu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daluu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-06-24T23:54:36Z",
    "updated_at": "2015-06-25T04:00:28Z",
    "closed_at": null,
    "body": "I was looking at the readme for Sinatra, \r\n\r\nhttp://www.sinatrarb.com/intro.html\r\n\r\nthere's a section for static files. I don't see any other documentation regarding static files on the sinatrarb site.\r\n\r\nI used a custom directory and got that working. But what's not clear is that a typical web server setup of\r\n\r\nhttp://site.com/path\r\n\r\nwould serve the corresponding root file: index.htm, index.html, default.htm, default.html, etc. if any such file exists. And that may be customizable for what the name and extension of the file might be though usually is index or default and end with \".htm\" or \".html\".\r\n\r\nIt seems Sinatra does not simulate that behavior, and one must specifically request the filename after the resource path.\r\n\r\nIs there a way to map serving a specific file when no filename specified after path? Or must I write a handler method that instead reads a default file (as text string) and return that as a workaround? I had hope for the easy static files route.\r\n\r\nPlease add such support if missing or add/update docs if feature exists."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1008",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1008/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1008/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1008/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1008",
    "id": 81719536,
    "number": 1008,
    "title": "Two gets when sending attachment and session is lost in the second get",
    "user": {
      "login": "J-F-Liu",
      "id": 1472963,
      "avatar_url": "https://avatars.githubusercontent.com/u/1472963?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/J-F-Liu",
      "html_url": "https://github.com/J-F-Liu",
      "followers_url": "https://api.github.com/users/J-F-Liu/followers",
      "following_url": "https://api.github.com/users/J-F-Liu/following{/other_user}",
      "gists_url": "https://api.github.com/users/J-F-Liu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/J-F-Liu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/J-F-Liu/subscriptions",
      "organizations_url": "https://api.github.com/users/J-F-Liu/orgs",
      "repos_url": "https://api.github.com/users/J-F-Liu/repos",
      "events_url": "https://api.github.com/users/J-F-Liu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/J-F-Liu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-28T02:20:05Z",
    "updated_at": "2015-05-28T02:20:05Z",
    "closed_at": null,
    "body": "The code is:\r\n~~~~~~~~~~~~~~~\r\nenable :sessions\r\nget '/open/:url' do\r\n  p session\r\n  content_type 'application/internet-shortcut'\r\n  headers \"Content-Disposition\" => 'inline; filename=\"folder.url\"'\r\n  \"[InternetShortcut]\\r\\n\"+\"URL=file:///#{params[:url]}\"\r\nend\r\n~~~~~~~~~~~~~~~\r\n\r\nAccess http://127.0.0.1:4567/open/%5C%5C172.16.100.14%5Clibm%5C005%5CZY2206%5C3 \r\nThe screen log is:\r\n~~~~~~~~~~~~\r\n{\"session_id\"=>\"6080cb0c03e2ae4a62283594961ad19bce8d8d85e50b16241fe82258e6a31436\", \"csrf\"=>\"35f53c900ee3349498b7b24b557bdb87\", \"tracking\"=>{\"HTTP_USER_AGENT\"=>\"\r\na3dbdacb9716b38bdd2474612eba2412460e94d6\", \"HTTP_ACCEPT_LANGUAGE\"=>\"ca4aee0e81214addc5fb12877cf9e5c8b8beb7d6\"}}\r\n127.0.0.1 - - [28/May/2015:10:15:29 +0800] \"GET /open/%5C%5C172.16.100.14%5Clibm%5C005%5CZY2206%5C3 HTTP/1.1\" 200 65 0.0130\r\n{}\r\n127.0.0.1 - - [28/May/2015:10:15:29 +0800] \"GET /open/%5C%5C172.16.100.14%5Clibm%5C005%5CZY2206%5C3 HTTP/1.1\" 200 65 0.0100\r\n~~~~~~~~~~~~\r\n\r\nSession should not lost, otherwise user needs to login again."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1007",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1007/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1007/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1007/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1007",
    "id": 77629058,
    "number": 1007,
    "title": "Sessions doesn't work WebSocket and Safari 8.0.6",
    "user": {
      "login": "nzwsch",
      "id": 5597094,
      "avatar_url": "https://avatars.githubusercontent.com/u/5597094?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nzwsch",
      "html_url": "https://github.com/nzwsch",
      "followers_url": "https://api.github.com/users/nzwsch/followers",
      "following_url": "https://api.github.com/users/nzwsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/nzwsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nzwsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nzwsch/subscriptions",
      "organizations_url": "https://api.github.com/users/nzwsch/orgs",
      "repos_url": "https://api.github.com/users/nzwsch/repos",
      "events_url": "https://api.github.com/users/nzwsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nzwsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-05-18T11:58:39Z",
    "updated_at": "2015-05-18T12:08:43Z",
    "closed_at": null,
    "body": "Sessions in Sinatra 1.4.6 which is empty hash when I send a request WebSocket. I don't know what is  going on. Here's my log.\r\n\r\n```ruby\r\nrequire 'sinatra'\r\n\r\nenable :sessions\r\n\r\nget '/' do\r\n  p session\r\nend\r\n```\r\n```\r\n== Sinatra (v1.4.6) has taken the stage on 4567 for development with backup from Thin\r\nThin web server (v1.6.3 codename Protein Powder)\r\nMaximum connections set to 1024\r\nListening on localhost:4567, CTRL+C to stop\r\n\r\n# access to localhost:4567\r\n{\"session_id\"=>\"98855aa040ef323043fb1f61f8a124e825cbfe4e6360df3c0a8fe617fef8dbac\", \"csrf\"=>\"3c95d2c79c1a40e9587afae4d9523c59\", \"tracking\"=>{\"HTTP_USER_AGENT\"=>\"791d7821564edc01268d4a0745fdc840342c56c1\", \"HTTP_ACCEPT_LANGUAGE\"=>\"1080c8fd64272bd8596ff2823075c0539cc43d8a\"}}\r\n127.0.0.1 - - [18/May/2015:20:41:25 +0900] \"GET / HTTP/1.1\" 200 - 0.0093\r\n\r\n# new WebSocket('ws://localhost:4567/'); on Safari's console\r\n{}  <= ???\r\n127.0.0.1 - - [18/May/2015:20:42:13 +0900] \"GET / HTTP/1.1\" 200 - 0.0012\r\n```\r\n(removed Security warning)\r\n\r\nGoogle Chrome, Opera and FireFox returns sessions correctly. Maybe it shouldn't be reported here but I have no idea using sessions without Cookies."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1006",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1006/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1006/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1006/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/1006",
    "id": 74361223,
    "number": 1006,
    "title": "Make it easier to override the parms method/attr_accessor.",
    "user": {
      "login": "gam3",
      "id": 99491,
      "avatar_url": "https://avatars.githubusercontent.com/u/99491?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gam3",
      "html_url": "https://github.com/gam3",
      "followers_url": "https://api.github.com/users/gam3/followers",
      "following_url": "https://api.github.com/users/gam3/following{/other_user}",
      "gists_url": "https://api.github.com/users/gam3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gam3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gam3/subscriptions",
      "organizations_url": "https://api.github.com/users/gam3/orgs",
      "repos_url": "https://api.github.com/users/gam3/repos",
      "events_url": "https://api.github.com/users/gam3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gam3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      },
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feedback",
        "name": "feedback",
        "color": "c7def8"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-08T13:19:28Z",
    "updated_at": "2015-05-23T01:10:30Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/1006",
      "html_url": "https://github.com/sinatra/sinatra/pull/1006",
      "diff_url": "https://github.com/sinatra/sinatra/pull/1006.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/1006.patch"
    },
    "body": "Do not call the params method/attr_accessor except while in process_route block, so that overriding the params accessor method is simpler.\r\n"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/1005",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/1005/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/1005/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/1005/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/1005",
    "id": 73639532,
    "number": 1005,
    "title": "error Mongoid::Errors::DocumentNotFound does not pass",
    "user": {
      "login": "adrianotadao",
      "id": 387138,
      "avatar_url": "https://avatars.githubusercontent.com/u/387138?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrianotadao",
      "html_url": "https://github.com/adrianotadao",
      "followers_url": "https://api.github.com/users/adrianotadao/followers",
      "following_url": "https://api.github.com/users/adrianotadao/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrianotadao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrianotadao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrianotadao/subscriptions",
      "organizations_url": "https://api.github.com/users/adrianotadao/orgs",
      "repos_url": "https://api.github.com/users/adrianotadao/repos",
      "events_url": "https://api.github.com/users/adrianotadao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrianotadao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 8,
    "created_at": "2015-05-06T14:28:26Z",
    "updated_at": "2015-06-12T17:49:21Z",
    "closed_at": null,
    "body": "Hi all,\r\n\r\nI'm trying to handle error with sinatra but does not works to me.\r\n\r\nLook at this:\r\n\r\n**Works**\r\n```ruby\r\nget '/' do\r\n  begin\r\n    Namespace.find(params[:id])\r\n  rescue Mongoid::Errors::DocumentNotFound\r\n    #Here works\r\n  end\r\nend\r\n```\r\n\r\n**Does not works**\r\n```ruby\r\nerror Mongoid::Errors::DocumentNotFound do\r\n  #Does not pass here\r\nend\r\n```\r\n\r\nI'm using:\r\n\r\n```\r\ngem 'sinatra', '1.4.6'\r\ngem 'mongoid', '4.0.2'\r\n```\r\n\r\nAny idea?"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/984",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/984/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/984/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/984/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/984",
    "id": 63061319,
    "number": 984,
    "title": "Introduce SINATRA_ENV and remove RACK_ENV",
    "user": {
      "login": "dmathieu",
      "id": 9347,
      "avatar_url": "https://avatars.githubusercontent.com/u/9347?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmathieu",
      "html_url": "https://github.com/dmathieu",
      "followers_url": "https://api.github.com/users/dmathieu/followers",
      "following_url": "https://api.github.com/users/dmathieu/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmathieu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmathieu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmathieu/subscriptions",
      "organizations_url": "https://api.github.com/users/dmathieu/orgs",
      "repos_url": "https://api.github.com/users/dmathieu/repos",
      "events_url": "https://api.github.com/users/dmathieu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmathieu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2015-03-19T18:38:37Z",
    "updated_at": "2015-04-02T20:11:55Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/984",
      "html_url": "https://github.com/sinatra/sinatra/pull/984",
      "diff_url": "https://github.com/sinatra/sinatra/pull/984.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/984.patch"
    },
    "body": "`RACK_ENV` should not be used with values other than `development` and `deployment`. Therefore, it can't be used to check for `production environment.\r\n\r\nSee http://www.hezmatt.org/~mpalmer/blog/2013/10/13/rack_env-its-not-for-you.html\r\n\r\nIn fact, it can even cause some issues if your app is using unicorn, as they're including internal rack middlewares relying on `RACK_ENV` to have the `deployment` value.\r\nSee https://github.com/defunkt/unicorn/blob/master/lib/unicorn.rb#L56-L79\r\n\r\nRack itself does that too.\r\nhttps://github.com/rack/rack/blob/4e4ab39b0508aa3e59f5d7e53696ef6ae7c220ed/lib/rack/server.rb#L228\r\n\r\nThis removes using `RACK_ENV`, and replaces it with `SINATRA_ENV`.\r\nSince it's a major changes, it should be merged in the Sinatra 2.0 branch. I'm not seeing anything of the kind, so feel free to stall this until there's discussion about it."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/968",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/968/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/968/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/968/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/968",
    "id": 56379063,
    "number": 968,
    "title": "Allow status to be specified with symbols",
    "user": {
      "login": "tobiashm",
      "id": 5422,
      "avatar_url": "https://avatars.githubusercontent.com/u/5422?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tobiashm",
      "html_url": "https://github.com/tobiashm",
      "followers_url": "https://api.github.com/users/tobiashm/followers",
      "following_url": "https://api.github.com/users/tobiashm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tobiashm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tobiashm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tobiashm/subscriptions",
      "organizations_url": "https://api.github.com/users/tobiashm/orgs",
      "repos_url": "https://api.github.com/users/tobiashm/repos",
      "events_url": "https://api.github.com/users/tobiashm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tobiashm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2015-02-03T13:45:22Z",
    "updated_at": "2015-02-07T19:44:03Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/968",
      "html_url": "https://github.com/sinatra/sinatra/pull/968",
      "diff_url": "https://github.com/sinatra/sinatra/pull/968.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/968.patch"
    },
    "body": "Let the `status` helper accept symbols representing HTTP status codes, by looking up the numeric status code in `Rack::Utils`\r\n\r\nThis allows you to e.g. specify `status :accepted` instead of `status 202`, so readers of your code doesn't have to remember less used status codes."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/962",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/962/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/962/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/962/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/962",
    "id": 54340286,
    "number": 962,
    "title": "Server-Sent Events dont work on JRuby",
    "user": {
      "login": "Integralist",
      "id": 180050,
      "avatar_url": "https://avatars.githubusercontent.com/u/180050?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Integralist",
      "html_url": "https://github.com/Integralist",
      "followers_url": "https://api.github.com/users/Integralist/followers",
      "following_url": "https://api.github.com/users/Integralist/following{/other_user}",
      "gists_url": "https://api.github.com/users/Integralist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Integralist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Integralist/subscriptions",
      "organizations_url": "https://api.github.com/users/Integralist/orgs",
      "repos_url": "https://api.github.com/users/Integralist/repos",
      "events_url": "https://api.github.com/users/Integralist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Integralist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-14T16:10:47Z",
    "updated_at": "2015-02-11T04:03:50Z",
    "closed_at": null,
    "body": "I've uploaded an example repo that demonstrates the issue (of which there are two):\r\n\r\nhttps://github.com/Integralist/Sinatra-SSE\r\n\r\nThe first issue is that SSE doesn't appear to work when using JRuby, but it does work when using MRI (note: the above repo is set to use MRI so it should work; so make sure to switch to JRuby and reinstall dependencies before testing)\r\n\r\nRun with `rackup -p 8000` and then you'll be able to access the application via `http://localhost:8000/`.\r\n\r\nThe home page loads a JavaScript file that opens a connection to `/healthcheck`.\r\n\r\nThe `/healthcheck` endpoint gets passed an even object from `/update`. Where `/update` is a POST endpoint that receives JSON.\r\n\r\nYou can test this using something like:\r\n\r\n```base\r\ncurl -v -H \"Content-Type: application/json\" -X POST -d '{\"foo\":\"bar\"}' http://127.0.0.1:8000/update\r\n```\r\n\r\nThere are no obvious errors when using JRuby. The errors reported by JavaScript aren't helpful either.\r\n\r\nThe output in the terminal (for JRuby) is:\r\n\r\n```\r\nPuma 2.10.2 starting...\r\n* Min threads: 0, max threads: 16\r\n* Environment: development\r\n* Listening on tcp://localhost:8000\r\n127.0.0.1 - - [14/Jan/2015:16:11:55 +0000] \"GET / HTTP/1.1\" 200 190 0.0960\r\n127.0.0.1 - - [14/Jan/2015:16:11:55 +0000] \"GET /assets/scripts/connection.js HTTP/1.1\" 304 - 0.0080\r\n127.0.0.1 - - [14/Jan/2015:16:11:55 +0000] \"GET /healthcheck HTTP/1.1\" 200 - 0.0200\r\n127.0.0.1 - - [14/Jan/2015:16:11:57 +0000] \"GET / HTTP/1.1\" 200 190 0.0380\r\n127.0.0.1 - - [14/Jan/2015:16:11:58 +0000] \"GET /assets/scripts/connection.js HTTP/1.1\" 304 - 0.0160\r\n127.0.0.1 - - [14/Jan/2015:16:11:58 +0000] \"GET /healthcheck HTTP/1.1\" 200 - 0.0130\r\n127.0.0.1 - - [14/Jan/2015:16:12:01 +0000] \"GET /healthcheck HTTP/1.1\" 200 - 0.0100\r\n127.0.0.1 - - [14/Jan/2015:16:12:04 +0000] \"GET /healthcheck HTTP/1.1\" 200 - 0.0060\r\n```\r\n\r\nThe browser displays something like:\r\n\r\n```\r\n:8000/healthcheck:1 GET http://localhost:8000/healthcheck net::ERR_CONNECTION_REFUSED\r\nconnection.js:12 error Event {clipboardData: undefined, path: NodeList[0], cancelBubble: false, returnValue: true, srcElement: EventSource…}\r\n```\r\n\r\n---\r\n\r\nThe second issue (with MRI) is a random error that is reported:\r\n\r\n```\r\nNoMethodError: undefined method `join' for #<String:0x007f8cb19bee58>\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/show_exceptions.rb:37:in `rescue in call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/show_exceptions.rb:21:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:180:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:2014:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:1478:in `block in call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:1788:in `synchronize'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:1478:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/urlmap.rb:66:in `block in call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/urlmap.rb:50:in `each'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/urlmap.rb:50:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/tempfile_reaper.rb:15:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/lint.rb:49:in `_call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/lint.rb:37:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/showexceptions.rb:24:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/commonlogger.rb:33:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/sinatra-1.4.5/lib/sinatra/base.rb:217:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/chunked.rb:54:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/content_length.rb:15:in `call'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/connection.rb:86:in `block in pre_process'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/connection.rb:84:in `catch'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/connection.rb:84:in `pre_process'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/connection.rb:53:in `process'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/connection.rb:39:in `receive_data'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/eventmachine-1.0.4/lib/eventmachine.rb:187:in `run_machine'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/eventmachine-1.0.4/lib/eventmachine.rb:187:in `run'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/backends/base.rb:73:in `start'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/thin-1.6.3/lib/thin/server.rb:162:in `start'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/handler/thin.rb:19:in `run'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/server.rb:286:in `start'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/server.rb:147:in `start'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/lib/rack/server.rb:147:in `start'                 \r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/gems/rack-1.6.0/bin/rackup:4:in `<top (required)>'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/bin/rackup:23:in `load'\r\n        /Users/markmcdonnell/.gem/ruby/2.0.0/bin/rackup:23:in `<main>'\r\n```\r\n\r\n...this error occurs every once in a while. I've yet to find any rhyme or reason behind it."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/942",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/942/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/942/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/942/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/942",
    "id": 48393472,
    "number": 942,
    "title": "Add before and after route activation hooks",
    "user": {
      "login": "astratto",
      "id": 207754,
      "avatar_url": "https://avatars.githubusercontent.com/u/207754?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astratto",
      "html_url": "https://github.com/astratto",
      "followers_url": "https://api.github.com/users/astratto/followers",
      "following_url": "https://api.github.com/users/astratto/following{/other_user}",
      "gists_url": "https://api.github.com/users/astratto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astratto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astratto/subscriptions",
      "organizations_url": "https://api.github.com/users/astratto/orgs",
      "repos_url": "https://api.github.com/users/astratto/repos",
      "events_url": "https://api.github.com/users/astratto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astratto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-11T15:05:55Z",
    "updated_at": "2015-02-06T17:28:16Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/942",
      "html_url": "https://github.com/sinatra/sinatra/pull/942",
      "diff_url": "https://github.com/sinatra/sinatra/pull/942.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/942.patch"
    },
    "body": "These hooks provide a way to get more information about which routes are\r\nactivated (i.e., metrics, filtering, etc...)"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/941",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/941/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/941/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/941/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/941",
    "id": 47545976,
    "number": 941,
    "title": "Mention how to start various servers in threaded mode",
    "user": {
      "login": "kytrinyx",
      "id": 276834,
      "avatar_url": "https://avatars.githubusercontent.com/u/276834?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kytrinyx",
      "html_url": "https://github.com/kytrinyx",
      "followers_url": "https://api.github.com/users/kytrinyx/followers",
      "following_url": "https://api.github.com/users/kytrinyx/following{/other_user}",
      "gists_url": "https://api.github.com/users/kytrinyx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kytrinyx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kytrinyx/subscriptions",
      "organizations_url": "https://api.github.com/users/kytrinyx/orgs",
      "repos_url": "https://api.github.com/users/kytrinyx/repos",
      "events_url": "https://api.github.com/users/kytrinyx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kytrinyx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/docs",
        "name": "docs",
        "color": "3ec300"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-11-02T19:31:26Z",
    "updated_at": "2015-08-15T16:39:30Z",
    "closed_at": null,
    "body": "e.g. `thin --threaded start`\r\n\r\nFrom discussion here: https://github.com/sinatra/sinatra/issues/937"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/940",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/940/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/940/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/940/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/940",
    "id": 47490514,
    "number": 940,
    "title": "Is there a reason the server_settings option is not documented anywhere?",
    "user": {
      "login": "vais",
      "id": 77592,
      "avatar_url": "https://avatars.githubusercontent.com/u/77592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vais",
      "html_url": "https://github.com/vais",
      "followers_url": "https://api.github.com/users/vais/followers",
      "following_url": "https://api.github.com/users/vais/following{/other_user}",
      "gists_url": "https://api.github.com/users/vais/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vais/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vais/subscriptions",
      "organizations_url": "https://api.github.com/users/vais/orgs",
      "repos_url": "https://api.github.com/users/vais/repos",
      "events_url": "https://api.github.com/users/vais/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vais/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/docs",
        "name": "docs",
        "color": "3ec300"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-01T05:56:34Z",
    "updated_at": "2015-03-24T06:24:41Z",
    "closed_at": null,
    "body": "Digging through the code I found that there is a `set :server_settings` option that does not seem to be documented anywhere (even Google search for this option and sinatra comes up with nothing). Is there a reason this is undocumented? I.e. is it ok to use this option moving forward, or will it be removed?\r\n\r\nIt makes it easy to pass options to the underlying server in a classic style app. For example:\r\n\r\n```ruby\r\nrequire 'sinatra'\r\nrequire 'webrick/https'\r\n\r\nset :server, 'webrick'\r\n\r\nset :server_settings,\r\n  :DoNotReverseLookup => true,\r\n  :SSLEnable          => true,\r\n  :SSLVerifyClient    => ::OpenSSL::SSL::VERIFY_NONE,\r\n  :SSLCertName        => [['CN', 'Sinatra']]\r\n\r\nget '/' do\r\n  Time.now.to_s\r\nend\r\n```"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/924",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/924/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/924/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/924/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/924",
    "id": 42265198,
    "number": 924,
    "title": "Streaming support for template engines",
    "user": {
      "login": "minad",
      "id": 50754,
      "avatar_url": "https://avatars.githubusercontent.com/u/50754?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minad",
      "html_url": "https://github.com/minad",
      "followers_url": "https://api.github.com/users/minad/followers",
      "following_url": "https://api.github.com/users/minad/following{/other_user}",
      "gists_url": "https://api.github.com/users/minad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minad/subscriptions",
      "organizations_url": "https://api.github.com/users/minad/orgs",
      "repos_url": "https://api.github.com/users/minad/repos",
      "events_url": "https://api.github.com/users/minad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2014-09-09T02:37:21Z",
    "updated_at": "2015-02-11T04:18:31Z",
    "closed_at": null,
    "body": "Take a look at\r\n\r\n* Basic example application https://github.com/slim-template/sinatra-stream\r\n* Slim issue https://github.com/slim-template/slim/issues/540 \r\n\r\nThe implementation for the Slim engine works. However the overwritten helper `render` can be adapted to work for other engines. Basically the helper inverts the render order of layout and template and manages the `@_out_buf`."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/922",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/922/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/922/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/922/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/922",
    "id": 41884152,
    "number": 922,
    "title": "Response body being set on 404 errors outside of error handler",
    "user": {
      "login": "brettbuddin",
      "id": 6059,
      "avatar_url": "https://avatars.githubusercontent.com/u/6059?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brettbuddin",
      "html_url": "https://github.com/brettbuddin",
      "followers_url": "https://api.github.com/users/brettbuddin/followers",
      "following_url": "https://api.github.com/users/brettbuddin/following{/other_user}",
      "gists_url": "https://api.github.com/users/brettbuddin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brettbuddin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brettbuddin/subscriptions",
      "organizations_url": "https://api.github.com/users/brettbuddin/orgs",
      "repos_url": "https://api.github.com/users/brettbuddin/repos",
      "events_url": "https://api.github.com/users/brettbuddin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brettbuddin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2014-09-04T00:49:14Z",
    "updated_at": "2015-02-11T04:21:36Z",
    "closed_at": null,
    "body": "Within our application I'm defining the `#http_status` method for each error to control HTTP status codes:\r\n\r\n```ruby\r\nclass RecordNotFoundError < StandardError\r\n  def http_status; 404 end\r\nend\r\n```\r\n\r\nWhen this exception is raised in production I receive a 404 response as I expect. However, Sinatra appears to be setting `<h1>Not Found</h1>` as the response body. I tried working around this by clearing Sinatra's defaults (error handlers included) using `Sinatra::Base.reset!` without any luck.\r\n\r\nAfter looking further into it I've discovered that Sinatra is setting the response body of these 404 responses outside of the context of an error handler: https://github.com/sinatra/sinatra/blob/1f9629b1b0cf5912ca1c3ac2870d97401b07e435/lib/sinatra/base.rb#L1117\r\n\r\nThis behavior seems like it belongs within a default error handler rather than absolutely set. Perhaps somewhat along the lines of how 500 errors function by default: https://github.com/sinatra/sinatra/blob/1f9629b1b0cf5912ca1c3ac2870d97401b07e435/lib/sinatra/base.rb#L1902-L1906. As a default error handler we'd have the ability to clear it if necessary."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/920",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/920/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/920/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/920/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/920",
    "id": 41552264,
    "number": 920,
    "title": "Thank you! Sinatra is great",
    "user": {
      "login": "BanzaiMan",
      "id": 25666,
      "avatar_url": "https://avatars.githubusercontent.com/u/25666?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BanzaiMan",
      "html_url": "https://github.com/BanzaiMan",
      "followers_url": "https://api.github.com/users/BanzaiMan/followers",
      "following_url": "https://api.github.com/users/BanzaiMan/following{/other_user}",
      "gists_url": "https://api.github.com/users/BanzaiMan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BanzaiMan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BanzaiMan/subscriptions",
      "organizations_url": "https://api.github.com/users/BanzaiMan/orgs",
      "repos_url": "https://api.github.com/users/BanzaiMan/repos",
      "events_url": "https://api.github.com/users/BanzaiMan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BanzaiMan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/regression",
        "name": "regression",
        "color": "e10c02"
      },
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/third%20party%20issue",
        "name": "third party issue",
        "color": "db3069"
      },
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/vulnerability",
        "name": "vulnerability",
        "color": "e10c02"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bmizerany",
      "id": 46,
      "avatar_url": "https://avatars.githubusercontent.com/u/46?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmizerany",
      "html_url": "https://github.com/bmizerany",
      "followers_url": "https://api.github.com/users/bmizerany/followers",
      "following_url": "https://api.github.com/users/bmizerany/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmizerany/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmizerany/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmizerany/subscriptions",
      "organizations_url": "https://api.github.com/users/bmizerany/orgs",
      "repos_url": "https://api.github.com/users/bmizerany/repos",
      "events_url": "https://api.github.com/users/bmizerany/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmizerany/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 12,
    "created_at": "2014-08-30T01:49:31Z",
    "updated_at": "2015-06-30T13:55:38Z",
    "closed_at": null,
    "body": "I love Sinatra's approach to lean and mean web apps. You guys are great. You are doing a wonderful job!\r\n\r\nThank you! :heart: :heart: :heart:"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/896",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/896/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/896/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/896/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/896",
    "id": 36706396,
    "number": 896,
    "title": "Unify not_found and error 404 behavior (Fixes #814)",
    "user": {
      "login": "jeremyevans",
      "id": 3846,
      "avatar_url": "https://avatars.githubusercontent.com/u/3846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremyevans",
      "html_url": "https://github.com/jeremyevans",
      "followers_url": "https://api.github.com/users/jeremyevans/followers",
      "following_url": "https://api.github.com/users/jeremyevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremyevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremyevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremyevans/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremyevans/orgs",
      "repos_url": "https://api.github.com/users/jeremyevans/repos",
      "events_url": "https://api.github.com/users/jeremyevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremyevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2014-06-27T21:43:12Z",
    "updated_at": "2015-02-06T17:28:56Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/896",
      "html_url": "https://github.com/sinatra/sinatra/pull/896",
      "diff_url": "https://github.com/sinatra/sinatra/pull/896.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/896.patch"
    },
    "body": "This makes not_found just call error 404, instead of also handling\r\nthe Sinatra::NotFound specially."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/895",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/895/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/895/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/895/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/895",
    "id": 36704999,
    "number": 895,
    "title": "Make route params available during error handler (Fixes #860)",
    "user": {
      "login": "jeremyevans",
      "id": 3846,
      "avatar_url": "https://avatars.githubusercontent.com/u/3846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremyevans",
      "html_url": "https://github.com/jeremyevans",
      "followers_url": "https://api.github.com/users/jeremyevans/followers",
      "following_url": "https://api.github.com/users/jeremyevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremyevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremyevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremyevans/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremyevans/orgs",
      "repos_url": "https://api.github.com/users/jeremyevans/repos",
      "events_url": "https://api.github.com/users/jeremyevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremyevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2014-06-27T21:23:07Z",
    "updated_at": "2015-02-06T17:41:57Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/895",
      "html_url": "https://github.com/sinatra/sinatra/pull/895",
      "diff_url": "https://github.com/sinatra/sinatra/pull/895.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/895.patch"
    },
    "body": "This is kind of ugly, but I couldn't see a better way.  One\r\npotential issue is that the splat and captures route params\r\nwill be overwritten by the error handler.  There's no way to\r\nchange that without breaking backwards compatibility.  We\r\ncould potentially offer the route splat/captures under\r\ndifferent param names, though."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/889",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/889/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/889/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/889/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/889",
    "id": 36106513,
    "number": 889,
    "title": "Fix regexp to use case-insensitivity correctly",
    "user": {
      "login": "rennex",
      "id": 449856,
      "avatar_url": "https://avatars.githubusercontent.com/u/449856?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rennex",
      "html_url": "https://github.com/rennex",
      "followers_url": "https://api.github.com/users/rennex/followers",
      "following_url": "https://api.github.com/users/rennex/following{/other_user}",
      "gists_url": "https://api.github.com/users/rennex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rennex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rennex/subscriptions",
      "organizations_url": "https://api.github.com/users/rennex/orgs",
      "repos_url": "https://api.github.com/users/rennex/repos",
      "events_url": "https://api.github.com/users/rennex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rennex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feedback",
        "name": "feedback",
        "color": "c7def8"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-06-19T18:49:20Z",
    "updated_at": "2015-02-06T17:32:04Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/889",
      "html_url": "https://github.com/sinatra/sinatra/pull/889",
      "diff_url": "https://github.com/sinatra/sinatra/pull/889.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/889.patch"
    },
    "body": "I noticed a faulty regexp in Sinatra's uri():\r\nThe regexp /[A-z]/ matches all alphabets, but also six non-alphabetic characters, as demonstrated by (\"A\"..\"z\").to_a.join\r\n=> \"ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz\""
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/884",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/884/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/884/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/884/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/884",
    "id": 35719395,
    "number": 884,
    "title": "Deprecate :after-handler value for show_exceptions",
    "user": {
      "login": "huoxito",
      "id": 245662,
      "avatar_url": "https://avatars.githubusercontent.com/u/245662?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huoxito",
      "html_url": "https://github.com/huoxito",
      "followers_url": "https://api.github.com/users/huoxito/followers",
      "following_url": "https://api.github.com/users/huoxito/following{/other_user}",
      "gists_url": "https://api.github.com/users/huoxito/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huoxito/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huoxito/subscriptions",
      "organizations_url": "https://api.github.com/users/huoxito/orgs",
      "repos_url": "https://api.github.com/users/huoxito/repos",
      "events_url": "https://api.github.com/users/huoxito/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huoxito/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-06-14T02:18:23Z",
    "updated_at": "2015-06-15T12:09:59Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/884",
      "html_url": "https://github.com/sinatra/sinatra/pull/884",
      "diff_url": "https://github.com/sinatra/sinatra/pull/884.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/884.patch"
    },
    "body": "It's very confusing for new users as they will write custom handlers\r\nwith `error(*codes, &:block)` but those would never run in development\r\nbecause `handle_exception!` was raising a general exception before\r\nchecking for custom errors.\r\n\r\nI believe the only advantage for that would be to display stack traces\r\non the browser for users but I think most of the times users are catching\r\ncustom errors they don't care much about the stack trace or even if they\r\ncare they can always raise the exception again\r\n\r\nIt's been a couple months I've tried to use sinatra built in error handler but would always drop it because I thought it didn't work till today when I took a closer look. I see README mentions the `:after_handler` option but it was not clear to me at all that I had to set that in order to make my error handler run in development. Initially I thought of submitting a README change to mention that here https://github.com/sinatra/sinatra#error-handling but after reading the code decided to take a chance on dropping that config option value and hear what you guys think?\r\n\r\nIn case you have strong options against it I can submit another PR to mention about the `show_exceptions, :after_handler` value on the error-handling section."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/866",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/866/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/866/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/866/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/866",
    "id": 31784365,
    "number": 866,
    "title": "Sinatra matches Accept headers too liberally",
    "user": {
      "login": "qwzybug",
      "id": 12143,
      "avatar_url": "https://avatars.githubusercontent.com/u/12143?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwzybug",
      "html_url": "https://github.com/qwzybug",
      "followers_url": "https://api.github.com/users/qwzybug/followers",
      "following_url": "https://api.github.com/users/qwzybug/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwzybug/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwzybug/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwzybug/subscriptions",
      "organizations_url": "https://api.github.com/users/qwzybug/orgs",
      "repos_url": "https://api.github.com/users/qwzybug/repos",
      "events_url": "https://api.github.com/users/qwzybug/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwzybug/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-18T06:46:36Z",
    "updated_at": "2014-06-27T20:44:08Z",
    "closed_at": null,
    "body": "Noticed this when updating an older app of mine to a newer version of Sinatra: two routes with the same name providing different content types will be matched unpredictably, especially in requests sent by browsers, which frequently accept \"\\*/\\*;q=0.8\" on all requests. Sinatra will match this to the first route by that name defined in the file, even if there is another explicit route defined to match the higher-quality, explicit content type sent by the client.\r\n\r\nTest case: https://github.com/qwzybug/sinatra/blob/accept_specificity/test/routing_test.rb#L1127\r\n\r\nMakes it difficult to rely on provides: to distinguish routes with the same name."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/860",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/860/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/860/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/860/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/860",
    "id": 30975986,
    "number": 860,
    "title": "Caught exceptions delete captured parameters",
    "user": {
      "login": "ahawkins",
      "id": 48928,
      "avatar_url": "https://avatars.githubusercontent.com/u/48928?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahawkins",
      "html_url": "https://github.com/ahawkins",
      "followers_url": "https://api.github.com/users/ahawkins/followers",
      "following_url": "https://api.github.com/users/ahawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/ahawkins/orgs",
      "repos_url": "https://api.github.com/users/ahawkins/repos",
      "events_url": "https://api.github.com/users/ahawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/has%20attached%20pr",
        "name": "has attached pr",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-04-07T11:22:14Z",
    "updated_at": "2015-02-13T16:33:09Z",
    "closed_at": null,
    "body": "Found this during my work today. Not sure if this is a bug or feature. If this is a feature, I'm keen to know why. Assume you have a route like `GET /users/:id`. Inside the router handler an error occurs and is caught by an `error` block. `params['id']` is not there and `params['captures']` returns the error instance. Here is an executable test case to describe the problem:\r\n\r\n```ruby\r\nENV['RACK_ENV'] = 'test'\r\nrequire 'sinatra'\r\nrequire 'minitest/autorun'\r\nrequire 'rack/test'\r\n\r\nclass ErrorCaptureTest < MiniTest::Unit::TestCase\r\n  include Rack::Test::Methods\r\n\r\n  TestError = Class.new StandardError\r\n\r\n  attr_reader :app\r\n\r\n  def test_rewrites_capatured_params\r\n    @app = Class.new Sinatra::Base do\r\n      error TestError do\r\n        halt 200, params.fetch('name', 'blank')\r\n      end\r\n\r\n      get '/:name' do\r\n        fail TestError\r\n      end\r\n    end\r\n\r\n    get '/adam'\r\n\r\n    assert_equal 'adam', last_response.body\r\n  end\r\nend\r\n```\r\n\r\n**tl;dr Expected behavior:** captured params be accessible inside error blocks."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/840",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/840/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/840/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/840/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/840",
    "id": 27399735,
    "number": 840,
    "title": "Use Sinatra::Runner In Integration Test",
    "user": {
      "login": "apotonick",
      "id": 10406,
      "avatar_url": "https://avatars.githubusercontent.com/u/10406?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apotonick",
      "html_url": "https://github.com/apotonick",
      "followers_url": "https://api.github.com/users/apotonick/followers",
      "following_url": "https://api.github.com/users/apotonick/following{/other_user}",
      "gists_url": "https://api.github.com/users/apotonick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apotonick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apotonick/subscriptions",
      "organizations_url": "https://api.github.com/users/apotonick/orgs",
      "repos_url": "https://api.github.com/users/apotonick/repos",
      "events_url": "https://api.github.com/users/apotonick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apotonick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2014-02-12T00:20:55Z",
    "updated_at": "2015-02-06T17:44:17Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/840",
      "html_url": "https://github.com/sinatra/sinatra/pull/840",
      "diff_url": "https://github.com/sinatra/sinatra/pull/840.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/840.patch"
    },
    "body": "As per PR https://github.com/sinatra/sinatra-contrib/pull/122 we now use `Sinatra::Runner` for integration tests.\r\n\r\nOnly problem is that we have a development dependency to `sinatra-contrib` but @rkh promised to look into that."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/838",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/838/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/838/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/838/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/838",
    "id": 26888614,
    "number": 838,
    "title": "Rack::Response.set_cookie does not respect SCRIPT_NAME",
    "user": {
      "login": "benlenarts",
      "id": 131161,
      "avatar_url": "https://avatars.githubusercontent.com/u/131161?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benlenarts",
      "html_url": "https://github.com/benlenarts",
      "followers_url": "https://api.github.com/users/benlenarts/followers",
      "following_url": "https://api.github.com/users/benlenarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/benlenarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benlenarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benlenarts/subscriptions",
      "organizations_url": "https://api.github.com/users/benlenarts/orgs",
      "repos_url": "https://api.github.com/users/benlenarts/repos",
      "events_url": "https://api.github.com/users/benlenarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benlenarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2014-02-04T15:18:25Z",
    "updated_at": "2015-02-13T16:34:22Z",
    "closed_at": null,
    "body": "When I use the `:path` option with `set_cookie` I expect that the path is prepended by `@env[\"SCRIPT_NAME\"]`."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/819",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/819/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/819/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/819/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/819",
    "id": 23469568,
    "number": 819,
    "title": "partial content request truncates response rack.session cookie",
    "user": {
      "login": "thinkOfaNumber",
      "id": 5110983,
      "avatar_url": "https://avatars.githubusercontent.com/u/5110983?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thinkOfaNumber",
      "html_url": "https://github.com/thinkOfaNumber",
      "followers_url": "https://api.github.com/users/thinkOfaNumber/followers",
      "following_url": "https://api.github.com/users/thinkOfaNumber/following{/other_user}",
      "gists_url": "https://api.github.com/users/thinkOfaNumber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thinkOfaNumber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thinkOfaNumber/subscriptions",
      "organizations_url": "https://api.github.com/users/thinkOfaNumber/orgs",
      "repos_url": "https://api.github.com/users/thinkOfaNumber/repos",
      "events_url": "https://api.github.com/users/thinkOfaNumber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thinkOfaNumber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feedback",
        "name": "feedback",
        "color": "c7def8"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 11,
    "created_at": "2013-11-28T23:02:55Z",
    "updated_at": "2015-03-03T11:18:27Z",
    "closed_at": null,
    "body": "Running:\r\n* Sinatra 1.4.3\r\n* Windows 8.1 Pro 64bit\r\n* Thin v1.5.1 Straight Razor\r\n* Ruby 1.9.3p448 (2013-06-27) [i386-mingw32]\r\n* Chrome 31.0.1650.57 m (all extensions disabled)\r\n\r\nIf I supply some audio tags in an erb:\r\n```\r\n<audio id=\"comms_alarm_sound\" loop=\"true\" src=\"audio/gong.wav\" preload=\"auto\"></audio>\r\n<audio id=\"schedule_sound\" loop=\"true\" src=\"audio/theetone.wav\" preload=\"auto\"></audio>\r\n```\r\nChrome does normal GETs for all the usual contect, but decides to fetch partial content for the audio with the following header:\r\n```\r\nRange: bytes=0-\r\n```\r\nNote that up until and including this point, the rack.session cookie is being sent with every request header:\r\n```\r\nCookie: rack.session=BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFMDMwNmU4ZDg1NjliNGE4ODM2ZjY0%0AMDc2YWU0ZTI3ZWNhNzYwNDM1MTIxNjFlZTAxNGVmMmYyZjIwYWUzNTRhOUki%0ADXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItYjhhZjFh%0ANDY2NTZiYTNkYjI3NjVmZjA2NGJjM2E4ZjhkODcxZWM5NEkiGUhUVFBfQUND%0ARVBUX0VOQ09ESU5HBjsARiItZWQyYjNjYTkwYTRlNzIzNDAyMzY3YTFkMTdj%0AOGIyODM5Mjg0MjM5OEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZDU1%0ANTljYjg3NGEwOGY4NGRmNDk0MzA4MmNkYzkyNzU5N2U0ZGIyYkkiEFJtY01l%0Ac3NhZ2VzBjsARlsASSIPbWV0YUxvYWRlZAY7AEZU%0A--cbda4c1ab76d0ecfb5aa404c1e978de1996c87b2\r\n```\r\n\r\nThe response from the server for the first partial-content audio file has the following response header (among others):\r\n```\r\nSet-Cookie: rack.session=BAh7BkkiD3Nlc3Npb25faWQGOgZFRiJFMDMwNmU4ZDg1NjliNGE4ODM2ZjY0%0AMDc2YWU0ZTI3ZWNhNzYwNDM1MTIxNjFlZTAxNGVmMmYyZjIwYWUzNTRhOQ%3D%3D%0A--27bdefb49980ea333fa08acf08b85ffa6ca8d96d; path=/; HttpOnly\r\n...\r\nContent-Range: bytes 0-191291/191292\r\n```\r\n\r\nNote how the session cookie is identical up until character 120 or so, and then it differs.  Chrome sees this as a new value for the session cookie, and so responds with this value on subsequent requests.\r\n\r\nThe next non-partial request has the truncated cookie in the request header, but then Sinatra responds with the original correct cookie (identical to the first I posted).\r\n\r\nThe upshot of this is that the session is destroyed when Chrome requests partial content audio and the user is logged out.\r\n\r\nI couldn't find any mention of bugs within the last year or so.  I did find that the partial content spec is vague, and Chrome makes more use of it than other browsers.  Firefox doesn't show this behaviour as it ignores the audio completely (until later); and IE doesn't do any partial headers, so it also works.\r\n\r\nHope that is enough information to look into it."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/814",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/814/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/814/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/814/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/814",
    "id": 22515933,
    "number": 814,
    "title": "Change in 404 handling behaviour. Intended?",
    "user": {
      "login": "crantok",
      "id": 442892,
      "avatar_url": "https://avatars.githubusercontent.com/u/442892?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crantok",
      "html_url": "https://github.com/crantok",
      "followers_url": "https://api.github.com/users/crantok/followers",
      "following_url": "https://api.github.com/users/crantok/following{/other_user}",
      "gists_url": "https://api.github.com/users/crantok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crantok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crantok/subscriptions",
      "organizations_url": "https://api.github.com/users/crantok/orgs",
      "repos_url": "https://api.github.com/users/crantok/repos",
      "events_url": "https://api.github.com/users/crantok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crantok/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/has%20attached%20pr",
        "name": "has attached pr",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2013-11-12T12:54:21Z",
    "updated_at": "2015-02-13T16:37:11Z",
    "closed_at": null,
    "body": "I see in the changelog entry for 1.4.0 that\r\n\r\n    * Setting status code to 404 in error handler no longer triggers not_found\r\n      handler. (Konstantin Haase)\r\n\r\nI have a 1.3.4 Sinatra app. When developing this app, I relied on the default 404 page. When I refined the app, I changed to handling all 404 errors through `error 404`\r\n\r\nI recently started a 1.4.4 Sinatra app where I had to take a different approach. Initially, when I called `halt 404` I got an empty document. This was different from getting 404 by not matching any routes (or being `pass`ed from all matching routes) where I would get Sinatra's default 404 page instead.\r\n\r\nTo change this I implemented `error 404`. That worked for my `halt 404` cases but pages that matched no routes still used Sinatra's default 404 page.\r\n\r\nFinally, implementing `not_found` handled all cases equally.\r\n\r\nIs this behaviour intended? IMHO having these two kinds of 404 treated in two different ways (until `not_found` is implemented) seems a little hostile.\r\n\r\nI am certain to implement `error 403` and implementing `error 404` at the same time would have been my natural choice. This is no longer a practical option."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/803",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/803/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/803/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/803/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/803",
    "id": 21313889,
    "number": 803,
    "title": "Tests and docs for #752",
    "user": {
      "login": "yegortimoshenko",
      "id": 1643293,
      "avatar_url": "https://avatars.githubusercontent.com/u/1643293?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yegortimoshenko",
      "html_url": "https://github.com/yegortimoshenko",
      "followers_url": "https://api.github.com/users/yegortimoshenko/followers",
      "following_url": "https://api.github.com/users/yegortimoshenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/yegortimoshenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yegortimoshenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yegortimoshenko/subscriptions",
      "organizations_url": "https://api.github.com/users/yegortimoshenko/orgs",
      "repos_url": "https://api.github.com/users/yegortimoshenko/repos",
      "events_url": "https://api.github.com/users/yegortimoshenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yegortimoshenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2013-10-21T13:09:56Z",
    "updated_at": "2015-02-06T17:48:29Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/803",
      "html_url": "https://github.com/sinatra/sinatra/pull/803",
      "diff_url": "https://github.com/sinatra/sinatra/pull/803.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/803.patch"
    },
    "body": "#752 by @niallsmart is about an option of specifying path and line when rendering with Proc or String.\r\nThis pull request contains the commit with tests and documentation."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/793",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/793/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/793/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/793/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/793",
    "id": 20195833,
    "number": 793,
    "title": "Reel suppport",
    "user": {
      "login": "patriciomacadden",
      "id": 321978,
      "avatar_url": "https://avatars.githubusercontent.com/u/321978?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patriciomacadden",
      "html_url": "https://github.com/patriciomacadden",
      "followers_url": "https://api.github.com/users/patriciomacadden/followers",
      "following_url": "https://api.github.com/users/patriciomacadden/following{/other_user}",
      "gists_url": "https://api.github.com/users/patriciomacadden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patriciomacadden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patriciomacadden/subscriptions",
      "organizations_url": "https://api.github.com/users/patriciomacadden/orgs",
      "repos_url": "https://api.github.com/users/patriciomacadden/repos",
      "events_url": "https://api.github.com/users/patriciomacadden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patriciomacadden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 13,
    "created_at": "2013-09-27T21:20:24Z",
    "updated_at": "2015-02-06T17:51:44Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/793",
      "html_url": "https://github.com/sinatra/sinatra/pull/793",
      "diff_url": "https://github.com/sinatra/sinatra/pull/793.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/793.patch"
    },
    "body": "See discussions in #773 and #774."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/774",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/774/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/774/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/774/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/774",
    "id": 19689174,
    "number": 774,
    "title": "Added reel-rack to the Gemfile.",
    "user": {
      "login": "tbuehlmann",
      "id": 77664,
      "avatar_url": "https://avatars.githubusercontent.com/u/77664?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbuehlmann",
      "html_url": "https://github.com/tbuehlmann",
      "followers_url": "https://api.github.com/users/tbuehlmann/followers",
      "following_url": "https://api.github.com/users/tbuehlmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbuehlmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbuehlmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbuehlmann/subscriptions",
      "organizations_url": "https://api.github.com/users/tbuehlmann/orgs",
      "repos_url": "https://api.github.com/users/tbuehlmann/repos",
      "events_url": "https://api.github.com/users/tbuehlmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbuehlmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 5,
    "created_at": "2013-09-18T15:50:14Z",
    "updated_at": "2015-09-01T03:15:40Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/774",
      "html_url": "https://github.com/sinatra/sinatra/pull/774",
      "diff_url": "https://github.com/sinatra/sinatra/pull/774.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/774.patch"
    },
    "body": "Added reel-rack to the Gemfile. The integration test for Reel is still failing though."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/762",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/762/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/762/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/762/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/762",
    "id": 19167793,
    "number": 762,
    "title": "Add a new filter: after_everything",
    "user": {
      "login": "multimulti",
      "id": 660938,
      "avatar_url": "https://avatars.githubusercontent.com/u/660938?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/multimulti",
      "html_url": "https://github.com/multimulti",
      "followers_url": "https://api.github.com/users/multimulti/followers",
      "following_url": "https://api.github.com/users/multimulti/following{/other_user}",
      "gists_url": "https://api.github.com/users/multimulti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/multimulti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/multimulti/subscriptions",
      "organizations_url": "https://api.github.com/users/multimulti/orgs",
      "repos_url": "https://api.github.com/users/multimulti/repos",
      "events_url": "https://api.github.com/users/multimulti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/multimulti/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 9,
    "created_at": "2013-09-08T21:45:54Z",
    "updated_at": "2013-09-25T12:11:56Z",
    "closed_at": null,
    "body": "Hi, I want to do some heavy_processing which will not influence the response sent. So I imagined I could first send the response, close the connection etc. and then do the processing.\r\n\r\nCould you provide a filter for executing code after the connection was shut? Or how would I do that?"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/721",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/721/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/721/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/721/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/721",
    "id": 14988264,
    "number": 721,
    "title": "Stacktraces from middleware swallowed with show exceptions",
    "user": {
      "login": "ahawkins",
      "id": 48928,
      "avatar_url": "https://avatars.githubusercontent.com/u/48928?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahawkins",
      "html_url": "https://github.com/ahawkins",
      "followers_url": "https://api.github.com/users/ahawkins/followers",
      "following_url": "https://api.github.com/users/ahawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/ahawkins/orgs",
      "repos_url": "https://api.github.com/users/ahawkins/repos",
      "events_url": "https://api.github.com/users/ahawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/bug",
        "name": "bug",
        "color": "e00707"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 18,
    "created_at": "2013-05-31T10:55:02Z",
    "updated_at": "2015-09-25T05:31:00Z",
    "closed_at": null,
    "body": "If `show_exceptions` is set and error is thrown from middleware, the stack trace is swallowed. I'm fairly sure this because of this here: https://github.com/sinatra/sinatra/blob/master/lib/sinatra/showexceptions.rb#L11\r\n\r\nHere's an example:\r\n\r\n```\r\n# config.ru\r\nclass ErrorTest\r\n  def initialize(app)\r\n  end\r\n\r\n  def call(env)\r\n    raise \"test!\"\r\n  end\r\nend\r\n\r\nclass Server < Sinatra::Application\r\n   use ErrorTest\r\nend\r\n\r\nrun Server\r\n```\r\n\r\nRackup the file. Sinatra will server the 500 page but the trace is missing from the log. I'm not sure if this is a bug or not. It's a weird behavior. If the error is raised inside the sinatra app itself, the stack will appear in the log."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/720",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/720/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/720/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/720/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/720",
    "id": 14861244,
    "number": 720,
    "title": "SASS `@warn` traces to a line in Sinatra app code, should trace to a line in the string of SASS code",
    "user": {
      "login": "lolmaus",
      "id": 200884,
      "avatar_url": "https://avatars.githubusercontent.com/u/200884?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lolmaus",
      "html_url": "https://github.com/lolmaus",
      "followers_url": "https://api.github.com/users/lolmaus/followers",
      "following_url": "https://api.github.com/users/lolmaus/following{/other_user}",
      "gists_url": "https://api.github.com/users/lolmaus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lolmaus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lolmaus/subscriptions",
      "organizations_url": "https://api.github.com/users/lolmaus/orgs",
      "repos_url": "https://api.github.com/users/lolmaus/repos",
      "events_url": "https://api.github.com/users/lolmaus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lolmaus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 9,
    "created_at": "2013-05-28T21:03:13Z",
    "updated_at": "2013-10-21T09:45:48Z",
    "closed_at": null,
    "body": "SASS:\r\n\r\n```sass\r\n@warn 'yay!'\r\n```\r\n\r\nWhen compiled with Sinatra's `sass` method, it traces to the Sinatra app code:\r\n\r\n> WARNING: yay\r\n> on line 108 of /opt/sassbin/app.rb\r\n\r\nInstead, it should trace to a line of the string passed to the `sass` method.\r\n\r\nSass maintainer **chriseppstein** [says](https://github.com/nex3/sass/issues/773#issuecomment-18579224):\r\n\r\n> Yes, [you should file the bug] against the sinatra folks. Happy to help them fix their sass integration. Probably they're not setting the :filename option or setting it incorrectly."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/714",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/714/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/714/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/714/events",
    "html_url": "https://github.com/sinatra/sinatra/pull/714",
    "id": 14496032,
    "number": 714,
    "title": "Use Rack::File's Content-Type in send_file",
    "user": {
      "login": "rakoo",
      "id": 501707,
      "avatar_url": "https://avatars.githubusercontent.com/u/501707?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rakoo",
      "html_url": "https://github.com/rakoo",
      "followers_url": "https://api.github.com/users/rakoo/followers",
      "following_url": "https://api.github.com/users/rakoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/rakoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rakoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rakoo/subscriptions",
      "organizations_url": "https://api.github.com/users/rakoo/orgs",
      "repos_url": "https://api.github.com/users/rakoo/repos",
      "events_url": "https://api.github.com/users/rakoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rakoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/17",
      "html_url": "https://github.com/sinatra/sinatra/milestones/1.5.0",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/17/labels",
      "id": 438940,
      "number": 17,
      "title": "1.5.0",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 5,
      "state": "open",
      "created_at": "2013-09-27T19:55:08Z",
      "updated_at": "2015-03-24T01:02:40Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 5,
    "created_at": "2013-05-19T12:48:33Z",
    "updated_at": "2015-02-06T17:54:11Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/sinatra/sinatra/pulls/714",
      "html_url": "https://github.com/sinatra/sinatra/pull/714",
      "diff_url": "https://github.com/sinatra/sinatra/pull/714.diff",
      "patch_url": "https://github.com/sinatra/sinatra/pull/714.patch"
    },
    "body": "When doing multipart, file.serving(env) will set the Content-Type with\r\nthe boundary, so we have to import it.\r\n\r\nThis is dependent of [multiple byte-request serving in sinatra](https://github.com/rack/rack/pull/559), not yet merged."
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/604",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/604/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/604/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/604/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/604",
    "id": 9717890,
    "number": 604,
    "title": "add hijack io support to streaming once spec is finalized",
    "user": {
      "login": "rkh",
      "id": 30442,
      "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkh",
      "html_url": "https://github.com/rkh",
      "followers_url": "https://api.github.com/users/rkh/followers",
      "following_url": "https://api.github.com/users/rkh/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
      "organizations_url": "https://api.github.com/users/rkh/orgs",
      "repos_url": "https://api.github.com/users/rkh/repos",
      "events_url": "https://api.github.com/users/rkh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/feature",
        "name": "feature",
        "color": "1446a0"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2013-01-06T16:51:46Z",
    "updated_at": "2015-09-15T21:50:06Z",
    "closed_at": null,
    "body": "see rack/rack#481"
  },
  {
    "url": "https://api.github.com/repos/sinatra/sinatra/issues/484",
    "labels_url": "https://api.github.com/repos/sinatra/sinatra/issues/484/labels{/name}",
    "comments_url": "https://api.github.com/repos/sinatra/sinatra/issues/484/comments",
    "events_url": "https://api.github.com/repos/sinatra/sinatra/issues/484/events",
    "html_url": "https://github.com/sinatra/sinatra/issues/484",
    "id": 3609988,
    "number": 484,
    "title": "routing logging to file",
    "user": {
      "login": "auxbuss",
      "id": 82220,
      "avatar_url": "https://avatars.githubusercontent.com/u/82220?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/auxbuss",
      "html_url": "https://github.com/auxbuss",
      "followers_url": "https://api.github.com/users/auxbuss/followers",
      "following_url": "https://api.github.com/users/auxbuss/following{/other_user}",
      "gists_url": "https://api.github.com/users/auxbuss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/auxbuss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/auxbuss/subscriptions",
      "organizations_url": "https://api.github.com/users/auxbuss/orgs",
      "repos_url": "https://api.github.com/users/auxbuss/repos",
      "events_url": "https://api.github.com/users/auxbuss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/auxbuss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/docs",
        "name": "docs",
        "color": "3ec300"
      },
      {
        "url": "https://api.github.com/repos/sinatra/sinatra/labels/third%20party%20issue",
        "name": "third party issue",
        "color": "db3069"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rkh",
      "id": 30442,
      "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkh",
      "html_url": "https://github.com/rkh",
      "followers_url": "https://api.github.com/users/rkh/followers",
      "following_url": "https://api.github.com/users/rkh/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
      "organizations_url": "https://api.github.com/users/rkh/orgs",
      "repos_url": "https://api.github.com/users/rkh/repos",
      "events_url": "https://api.github.com/users/rkh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkh/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": {
      "url": "https://api.github.com/repos/sinatra/sinatra/milestones/13",
      "html_url": "https://github.com/sinatra/sinatra/milestones/future",
      "labels_url": "https://api.github.com/repos/sinatra/sinatra/milestones/13/labels",
      "id": 275898,
      "number": 13,
      "title": "future",
      "description": null,
      "creator": {
        "login": "rkh",
        "id": 30442,
        "avatar_url": "https://avatars.githubusercontent.com/u/30442?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkh",
        "html_url": "https://github.com/rkh",
        "followers_url": "https://api.github.com/users/rkh/followers",
        "following_url": "https://api.github.com/users/rkh/following{/other_user}",
        "gists_url": "https://api.github.com/users/rkh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rkh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rkh/subscriptions",
        "organizations_url": "https://api.github.com/users/rkh/orgs",
        "repos_url": "https://api.github.com/users/rkh/repos",
        "events_url": "https://api.github.com/users/rkh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rkh/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 6,
      "state": "open",
      "created_at": "2013-02-26T04:46:08Z",
      "updated_at": "2015-09-04T15:37:57Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 37,
    "created_at": "2012-03-12T12:04:21Z",
    "updated_at": "2014-07-03T10:47:55Z",
    "closed_at": null,
    "body": "What is the canonical method for writing the sinatra log to a file?\r\n\r\nSay I have the following:\r\n\r\n```ruby\r\nrequire \"sinatra/base\"\r\n\r\nmodule App\r\n  class Main < Sinatra::Base\r\n\r\n    configure do\r\n      enable :logging\r\n    end\r\n\r\n    before do\r\n      logger.datetime_format = \"%Y/%m/%d @ %H:%M:%S \"\r\n      logger.level = Logger::INFO\r\n    end\r\n  \r\n    get '/' do\r\n      logger.debug \"debug message\"\r\n      logger.info \"info message\"\r\n      \"hello world\"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nI basically want to say, somewhere:\r\n\r\n```ruby\r\nlogger = Logger.new('log/app.log', 5, 'weekly')\r\n```\r\n\r\nHow do I do that?\r\n"
  }
]
